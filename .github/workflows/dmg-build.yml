name: Build macOS DMG

on:
  push:
    branches: [ k3ss, main ]
    paths:
      - 'k3ss-IDE/electron/**'
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: k3ss-IDE/electron/package-lock.json
      
      - name: Install dependencies
        run: |
          cd k3ss-IDE/electron
          npm ci
      
      - name: Import Code Signing Certificate
        if: ${{ secrets.MACOS_SIGNING_CERT != '' }}
        run: |
          echo "${{ secrets.MACOS_SIGNING_CERT }}" | base64 --decode > certificate.p12
          security create-keychain -p "${{ secrets.MACOS_SIGNING_PASSWORD }}" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "${{ secrets.MACOS_SIGNING_PASSWORD }}" build.keychain
          security import certificate.p12 -k build.keychain -P "${{ secrets.MACOS_SIGNING_PASSWORD }}" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "${{ secrets.MACOS_SIGNING_PASSWORD }}" build.keychain
      
      - name: Build DMG
        run: |
          cd k3ss-IDE/electron
          if [ -n "${{ secrets.MACOS_SIGNING_CERT }}" ]; then
            electron-builder --arm64 --mac
          else
            electron-builder --arm64 --mac --no-sign
          fi
      
      - name: Upload DMG artifact
        uses: actions/upload-artifact@v3
        with:
          name: k3ss-ide-macos
          path: k3ss-IDE/electron/dist/*.dmg
